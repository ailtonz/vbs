###
###
###
### Category1 : 
### Category2 : 
### Category3 : 
### Description : 
###
###
###
'***************************************'
' Declare script-level variables
'***************************************'
Dim strStageFolder		'String: Path to staging folder
Dim strTemplateFolder	'String: Path to template folder
Dim strWebDLL			'String: Path to Web site DLL
Dim strPackage			'String: Deployment package name
Dim fsoObj 				'Object: FileScriptingObject
Dim fldStage 			'Object: FileScripting Folder object
Dim fldTemplates 		'Object: FileScripting Folder object
Dim filTemplate			'Object: FileScripting File object
Dim filDLL				'Object: FileScripting File object
Dim strExportReport		'String: URL to Export Report
Dim strImportReport		'String: URL to Import Report
Dim intShowReports		'Integer: Response to MsgBox
Dim intErr				'Integer: Indicates whether error has occurred
Dim intContinue			'Integer: Response to MsgBox

'***************************************'
' Declare constants
'***************************************'
CONST CMS_EXPORT_CREATED_BY_CURRENT_USER = 1
CONST CMS_EXPORT_RIGHTS_GROUP_WITHOUT_MEMBERS = 2
CONST CMS_IMPORT_CREATED_BY_CURRENT_USER = 1
CONST CMS_IMPORT_RIGHTS_GROUP_WITHOUT_MEMBERS = 2
CONST CMS_IMPORT_RIGHTS_ON_ADD_USE_PACKAGE = 3
CONST CMS_IMPORT_RIGHTS_ON_REPLACE_USE_PACKAGE = 2

'***************************************'
' Initialize variables
'***************************************'
intErr = 0
strStageFolder= "C:\Staging\"
strTemplateFolder = "C:\Program Files\Microsoft Content Management Server\Sample Data\WoodgroveNet\Templates\"
strWebDLL = "C:\Program Files\Microsoft Content Management Server\Sample Data\WoodgroveNet\Bin\WoodgroveNet.DLL"
strDLLFolder = "C:\Program Files\Microsoft Content Management Server\Sample Data\WoodgroveNet\Bin\"
strImportReport = ""
strExportReport = ""


'***************************************'
' Prompt user
'***************************************'
intContinue = Msgbox("Do you want to start the export/import script?" & vbCrLf & "The script may take a few seconds, so please be patient...", vbYesNo, "Start Deployment Script?")

If intContinue = vbNo Then
	WScript.Quit
End If

'***************************************'
' Instantiate file scripting objects
'***************************************'
Set fsoObj = CreateObject("Scripting.FileSystemObject")
Set fldTemplates = fsoObj.GetFolder(strTemplateFolder)
Set fldStage = fsoObj.GetFolder(strStageFolder)
Set filDLL = fsoObj.GetFile(strWebDLL)


'*******************************************************************'
' Main body of deployment script
'*******************************************************************'
' 
'	NOTES:
'		 The following functions return 1 for success and 0 for failure:
'			ClearStage()
'			StageNew()
'			SimulateProduction()
'			ApplyStage()
'
'		The following functions return a string for success and "" for failure
'			ExportCMS()
'			ImportCMS()
'
If ClearStage() = 1 Then														'Removes previously staged files
	If StageTemplates() = 1 Then												'Copies templates that have changed in the last 30 minutes to the staging area
		strExportReport = ExportCMS()											'Uses the SD API to runs the export
		
		If strExportReport <> ""  Then	
			strExportReport = "http://localhost" & strExportReport				'Stores the URL to the export report
		
			If SimulateProduction() = 1 Then									'Prompts the user to simulate the production environment
				If ApplyStage() = 1 Then										'Copies staged templates to the production environment
					strImportReport = ImportCMS()								'Uses the SD API to runs the import
		
					If strImportReport <> "" Then
						strImportReport = "http://localhost" & strImportReport	'Stores the URL to the import report
					Else
						Msgbox "Error importing package"
						intErr = 1 
					End If
				Else
					Msgbox "Error copying new template files"
					intErr = 1
				End If
			Else
				Msgbox "Process cancelled by user"
				intErr = 1 
			End If
		Else
			Msgbox "Error exporting package" 
			intErr = 1
		End If
	Else
		Msgbox "Error retrieving new files" 
		intErr = 1
	End If
Else
	Msgbox "Error clearing the staging area"
	intErr = 1
End If

If intErr = 0 Then
	intShowReports = Msgbox("Export and import completed! Do you want to run the export and import reports?", vbYesNo,"Reports")
	
	If intShowReports = vbYes Then
		RunReport(strImportReport)		'Show Import Report
		RunReport(strExportReport)		'Show Export Report
	End If
Else
	MsgBox "The deployment script was interrupted..."
End If

'***********************************************************'
' Uses Scripting Objects to remove previously deployed files
'
' Returns 1 for success and 0 for failure
'
Function ClearStage()
	On Error Resume Next
 
	For Each filTemplate In fldStage.Files
		filTemplate.Delete(True)
	Next

	If Err.Number <> 0 Then
		ClearStage = 0
		Exit Function
	End If
	
	ClearStage = 1
End Function


'***********************************************************'
' Uses Scripting Objects to copy files that have changed in
' the last 30 minutes to the staging folder
'
' Returns 1 for success and 0 for failure
'
Function StageTemplates()
	On Error Resume Next
	
	For Each filTemplate In fldTemplates.Files
		If DateDiff("n", filTemplate.DateLastModified, Now()) _
				< 30 Then
			filTemplate.Copy strStageFolder, True
		End If
	Next
	
	filDLL.Copy strStageFolder, True

	If Err.Number <> 0 Then
		StageTemplates = 0
		Exit Function
	End If
	
	StageTemplates = 1
End Function

'************************************************************'
' Uses the Site Deployment API to create an export package for 
' items that have changed in the last 30 minutes.
'
' Returns URL of report for success and "" for failure
'
Function ExportCMS()
	Dim cmsDeployExport
	Dim cmsExportOptions
	Dim strPackageFileName 
	Dim strReportUrl 
	
	On Error Resume Next
	
	Set cmsDeployExport = _
    CreateObject("CmsDeployServer.CmsDeployExport.1")

	If Err.Number = 0 Then
		cmsDeployExport.AuthenticateAsCurrentUser()

		If Err.Number = 0 Then 
			strPackageFileName = "C:\Staging\DeployWoodgrove.sdo"
  
			Set cmsExportOptions = cmsDeployExport.Options
			cmsExportOptions.IncludeCreatedBy = _
				CMS_EXPORT_CREATED_BY_CURRENT_USER
			cmsExportOptions.IncludeRightsGroups = _
				CMS_EXPORT_RIGHTS_GROUP_WITHOUT_MEMBERS

			strReportUrl = _
				cmsDeployExport.Export(strPackageFileName, 30, "")
				
			If Err.Number = 0 Then
				ExportCMS = strReportUrl
				Exit Function
			Else
				ExportCMS = ""
				Exit Function
			End If
		Else
			ExportCMS = ""
			Exit Function
		End If
	Else
		ExportCMS = ""
	End If
End Function


'************************************************************'
' Simple prompt to allow user to reset the site so that it
' resembles the production environment. Student should follow
' the instructions BEFORE clicking OK
'
' Returns 1 for OK and 0 for Cancelled
'
Function SimulateProduction()
	Dim intResponse
	
	intResponse = MsgBox ("Before clicking OK:" & vbCrLf _
				& "Delete the 'FAQ' Channel in Site Manager"  & vbCrLf _
				& "Delete the 'FAQ' Template Gallery in Site Manager" & vbCrLf  _
				& "Delete the 'FAQ.aspx' file in Visual Studio .NET", vbOKCancel, "Simulate Production")
	
	If intResponse = vbOK Then
		SimulateProduction = 1
		Exit Function
	End If
	
	SimulateProduction = 0
End Function


'***********************************************************'
' Uses Scripting Objects to copy template files that have 
' been staged to the simulated production environment
' 
' Does not deploy the site deployment package (.SDO) - only
' templates are required
' Returns 1 for success and 0 for failure
'
Function ApplyStage()
	On Error Resume Next

	For Each filTemplate In fldStage.Files
		If Right(filTemplate.Name,3) <> "sdo" _
			And Right(filTemplate.Name,3) <> "dll" Then
			filTemplate.Copy(strTemplateFolder)
		End If

		If Right(filTemplate.Name,3) = "dll" Then
			filTemplate.Copy(strDLLFolder)
		End If
	Next

	If Err.Number <> 0 Then
		ApplyStage = 0
		Exit Function
	End If
	
	ApplyStage = 1
End Function

'***********************************************************'
' Uses Site Deployment API to import the SDO to the simulated
' production environment
'
' Returns URL of Report for success and "" for failure
'
Function ImportCMS()
	Dim cmsDeployImport
	Dim cmsImportOptions
	Dim strPackageFileName 
	Dim strReportUrl 
	
	On Error Resume Next

	Set cmsDeployImport = _
      CreateObject("CmsDeployServer.CmsDeployImport.1")

	If Err.Number = 0 Then
	    cmsDeployImport.AuthenticateAsCurrentUser()

		If Err.Number = 0 Then 
			strPackageFileName = "C:\Staging\DeployWoodgrove.sdo"

			Set cmsImportOptions = cmsDeployImport.Options

			cmsImportOptions.IncludeCreatedBy = _
				CMS_IMPORT_CREATED_BY_CURRENT_USER
			cmsImportOptions.IncludeRightsGroups = _
				CMS_IMPORT_RIGHTS_GROUP_WITHOUT_MEMBERS
			cmsImportOptions.RightsOnAdd = _
				CMS_IMPORT_RIGHTS_ON_ADD_USE_PACKAGE
			cmsImportOptions.RightsOnReplace = _
				CMS_IMPORT_RIGHTS_ON_REPLACE_USE_PACKAGE

			strReportUrl = _
				cmsDeployImport.Import(strPackageFileName)

			If Err.Number = 0 Then
				ImportCMS = strReportUrl
				Exit Function
			Else
				ImportCMS = ""
				Exit Function
			End If
		Else
			ImportCMS = ""
			Exit Function
		End If
	Else
		ImportCMS = ""
	End If
End Function

'*************************************************************'
' Automates Internet Explorer to allow user to view deployment
' reports. Accepts the URL of the report as am input parameter
'
Sub RunReport(strURL)
  Dim ie
  Set ie = CreateObject("InternetExplorer.Application")
  ie.Visible = true
  ie.Navigate strUrl 
End Sub

